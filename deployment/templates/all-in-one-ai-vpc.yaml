AWSTemplateFormatVersion: 2010-09-09
Description: Template for VPC

Parameters:
  AvailabilityZones:
    Description: >-
      The list of Availability Zones to use for the subnets in the VPC. The
      Quick Start uses two Availability Zones from your list and preserves the
      logical order you specify.
    Type: 'List<AWS::EC2::AvailabilityZone::Name>'

  CIDR:
    Type: String
    Default: 10.0.0.0/16
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
    ConstraintDescription: must be a valid CIDR block format.
    Description: The CIDR block for the VPC.

  PublicSubnet1CIDR:
    Type: String
    Default: 10.0.0.0/24
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
    ConstraintDescription: must be a valid CIDR block format.
    Description: The CIDR block for the public (DMZ) subnet located in Availability Zone 1.
    
  PublicSubnet2CIDR:
    Type: String
    Default: 10.0.1.0/24
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
    ConstraintDescription: must be a valid CIDR block format.
    Description: The CIDR block for the public (DMZ) subnet located in Availability Zone 2.

  PrivateSubnet1CIDR:
    Type: String
    Default: 10.0.2.0/24
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
    ConstraintDescription: must be a valid CIDR block format.
    Description: The CIDR block for the private subnet (Fortiweb) located in Availability Zone 1.

  PrivateSubnet2CIDR:
    Type: String
    Default: 10.0.3.0/24
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
    ConstraintDescription: must be a valid CIDR block format.
    Description: The CIDR block for the private subnet (Fortiweb)  located in Availability Zone 2.

  CustomIdentifier:
    Type: String
    Default: all-in-one-ai
    MaxLength: '20'
    ConstraintDescription: >-
      must only contain uppercase and lowercase letters and numbers. Max length is 10.
    Description: >-
      A custom identifier as resource name prefix. Must be at most 10 characters long and only contain uppercase, lowercase letters, and numbers. Max length is 10.

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref CIDR
      InstanceTenancy: default
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: !Ref CustomIdentifier

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PublicSubnet1CIDR
      AvailabilityZone: !Select 
        - 0
        - !Ref AvailabilityZones
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${CustomIdentifier}-PublicSubnet1"

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PublicSubnet2CIDR
      AvailabilityZone: !Select 
        - 1
        - !Ref AvailabilityZones
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${CustomIdentifier}-PublicSubnet2"
  
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PrivateSubnet1CIDR
      AvailabilityZone: !Select 
        - 0
        - !Ref AvailabilityZones
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${CustomIdentifier}-PrivateSubnet1"
  
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PrivateSubnet2CIDR
      AvailabilityZone: !Select 
        - 1
        - !Ref AvailabilityZones
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${CustomIdentifier}-PrivateSubnet2"

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${CustomIdentifier}-InternetGateway"

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
 
  RouteTablePublicSubnet:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: 'RouteTablePublicSubnet'

  PublicSubnet1RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePublicSubnet
      SubnetId: !Ref PublicSubnet1
    DependsOn:
      - RouteTablePublicSubnet
      - PublicSubnet1

  PublicSubnet2RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePublicSubnet
      SubnetId: !Ref PublicSubnet2
    DependsOn:
      - RouteTablePublicSubnet
      - PublicSubnet2

  PublicSubnetRoute1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref RouteTablePublicSubnet
      GatewayId: !Ref InternetGateway
    DependsOn:
      - InternetGatewayAttachment

  RouteTablePrivate1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: Private Route Table 1

  RouteTablePrivate1Association1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RouteTablePrivate1
      SubnetId:
        Ref: PrivateSubnet1

  RouteTablePrivate1Route0:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId:
        Ref: RouteTablePrivate1
      NatGatewayId:
        Ref: NatGw1

  RouteTablePrivate2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: Private Route Table 2

  RouteTablePrivate2Association1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RouteTablePrivate2
      SubnetId:
        Ref: PrivateSubnet2

  RouteTablePrivate2Route0:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId:
        Ref: RouteTablePrivate2
      NatGatewayId:
        Ref: NatGw1

  NatGw1:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: PublicSubnet1
      AllocationId:
        'Fn::GetAtt':
          - NatGw1ElasticIP
          - AllocationId
      Tags:
        - Key: Name
          Value: NAT GW A
  
  NatGw2:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: PublicSubnet2
      AllocationId:
        'Fn::GetAtt':
          - NatGw2ElasticIP
          - AllocationId
      Tags:
        - Key: Name
          Value: NAT GW B

  NatGw1ElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: VPC
  NatGw2ElasticIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: VPC

  S3VpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PolicyDocument: '{
          "Version":"2012-10-17",
          "Statement":[{
            "Effect":"Allow",
            "Principal": "*",
            "Action":["s3:*"],
            "Resource":["*"]
          }]
        }'
      RouteTableIds:
        - !Ref RouteTablePrivate1
        - !Ref RouteTablePrivate2
      ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
      VpcId: !Ref VPC 

  DynamoDBVpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PolicyDocument: '{
          "Version":"2012-10-17",
          "Statement":[{
            "Effect":"Allow",
            "Principal": "*",
            "Action": ["*"],
            "Resource": ["*"]
          }]
        }'
      RouteTableIds:
        - !Ref RouteTablePublicSubnet
      ServiceName: !Sub com.amazonaws.${AWS::Region}.dynamodb
      VpcId: !Ref VPC 

  SsmVpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref DefaultSecurityGroup
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ssm
      SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      VpcEndpointType: Interface
      VpcId: !Ref VPC 

  SsmVMessagespcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref DefaultSecurityGroup
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ssmmessages
      SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      VpcEndpointType: Interface
      VpcId: !Ref VPC 

  DefaultSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        VpcId: !Ref VPC
        GroupDescription: Default source security group
        SecurityGroupIngress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  ElasticSearchSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ElasticSearch 
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - 
          CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
        - 
          CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
  
  EfsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Security group for EFS
      SecurityGroupIngress:
      - IpProtocol: -1
        CidrIp: "0.0.0.0/0"

Outputs:
  VPC:
    Description: VPC ID
    Value: !Ref VPC
  PublicSubnet1:
    Description: Public Subnet 1 ID
    Value: !Ref PublicSubnet1
  PublicSubnet2:
    Description: Public Subnet 2 ID
    Value: !Ref PublicSubnet2
  PrivateSubnet1:
    Description: Private Subnet 1 ID
    Value: !Ref PrivateSubnet1
  PrivateSubnet2:
    Description: Private Subnet 2 ID
    Value: !Ref PrivateSubnet2
  ElasticSearchSecurityGroup:
    Description: ElasticSearchSecurityGroup
    Value: !Ref ElasticSearchSecurityGroup
  EfsSecurityGroup:
    Description: EfstSecurityGroup
    Value: !Ref EfsSecurityGroup
  DefaultSecurityGroup:
    Description: DefaultSecurityGroup
    Value: !Ref DefaultSecurityGroup
    
