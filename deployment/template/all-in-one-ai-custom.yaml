AWSTemplateFormatVersion: 2010-09-09
Description: Template for ElasticSearch (Global)

Parameters:
  S3Bucket:
    Description: S3 Bucket of assets
    Type: String

  S3Key:
    Description: S3 Bucket of assets
    Type: String

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: VPC SecurityGroup

  PrivateSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: VPC Private Subnet1 ID

  PrivateSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: VPC Private Subnet2 ID

  ChinaRegion: 
    Description: Check if the stack to be in CN Region
    Type: String
    Default: false
    AllowedValues: [ true, false ]

Conditions:
  Globally: !Equals [ false, !Ref ChinaRegion ]

Resources:
  CustomFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - !If
          - Globally
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
          - arn:aws-cn:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - !If
          - Globally
          - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
          - arn:aws-cn:iam::aws:policy/AmazonDynamoDBFullAccess
        - !If
          - Globally
          - arn:aws:iam::aws:policy/AmazonS3FullAccess
          - arn:aws-cn:iam::aws:policy/AmazonS3FullAccess
        - !If
          - Globally
          - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
          - arn:aws-cn:iam::aws:policy/AWSCloudFormationFullAccess
        - !If
          - Globally
          - arn:aws:iam::aws:policy/AmazonCognitoPowerUser
          - arn:aws-cn:iam::aws:policy/AmazonCognitoPowerUser
  
  CustomFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Sub ${S3Key}/code/spot_bot_custom.zip
      Handler: lambda_function.lambda_handler
      Role: !GetAtt CustomFunctionRole.Arn
      Timeout: 900
      Runtime: python3.9
      VpcConfig:
        SubnetIds: 
          - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2
        SecurityGroupIds: 
          - !Ref SecurityGroup

Outputs:
  CustomFunction:
    Value: !GetAtt CustomFunction.Arn
